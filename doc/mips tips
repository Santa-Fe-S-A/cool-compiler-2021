--------------------------------------------------------
■ Registers $at (1), $k0 (26), and $k1 (27) are reserved for the assembler
and operating system and should not be used by user programs or com-
pilers.
--------------------------------------------------------
■ Registers $a0 – $a3 (4–7) are used to pass the first four arguments to rou-
tines (remaining arguments are passed on the stack). Registers $v0 and
$v1 (2, 3) are used to return values from functions.
--------------------------------------------------------
■ Registers $t0 – $t9 (8–15, 24, 25) are caller-saved registers that are used
to hold temporary quantities that need not be preserved across calls (see
section 3.6 in Chapter 3).
--------------------------------------------------------
■ Registers $s0 – $s7 (16–23) are callee-saved registers that hold long-
lived values that should be preserved across calls.
--------------------------------------------------------
■ Register $gp (28) is a global pointer that points to the middle of a 64K
block of memory in the static data segment.
--------------------------------------------------------
■ Register $sp (29) is the stack pointer, which points to the first free loca-
tion on the stack. Register $fp (30) is the frame pointer. The jal instruc-
tion writes register $ra (31), the return address from a procedure call.
These two registers are explained in the next section.
